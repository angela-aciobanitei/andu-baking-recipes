<?xml version="1.0" encoding="utf-8"?>
<layout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <variable
            name="recipeDetails"
            type="com.ang.acb.bakeit.data.model.RecipeDetails" />

        <variable
            name="resource"
            type="com.ang.acb.bakeit.data.model.Resource" />

    </data>

    <androidx.coordinatorlayout.widget.CoordinatorLayout
        style="@style/Widget.Support.CoordinatorLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:fitsSystemWindows="true"
        tools:context=".ui.recipedetails.DetailsActivity">

        <!-- Note: To add a collapsing toolbar to your layout, place
        the CollapsingToolbarLayout inside an AppBarLayout. Then, add
        a Toolbar and any other views as a child to the collapsing
        toolbar layout, but make sure that the Toolbar is the last child.
        This ensures that the views are drawn in the correct order. Also
        make sure that the entire view structure is inside a Coordinator
        Layout to take advantage of the CollapsingToolbarLayoutâ€™s features.
        https://material.io/develop/android/components/collapsing-toolbar-layout/ -->
        <com.google.android.material.appbar.AppBarLayout
            android:id="@+id/app_bar"
            android:layout_width="match_parent"
            android:layout_height="@dimen/tall_toolbar_height"
            android:fitsSystemWindows="true"
            android:theme="@style/AppBarOverlay"
            app:toggleVisibility="@{recipeDetails.recipe != null}">

            <!-- A toolbar with a collapsing image -->
            <com.google.android.material.appbar.CollapsingToolbarLayout
                android:id="@+id/collapsing_toolbar"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:fitsSystemWindows="true"
                app:contentScrim="?attr/colorPrimary"
                app:expandedTitleMarginEnd="64dp"
                app:expandedTitleMarginStart="48dp"
                app:layout_scrollFlags="scroll|exitUntilCollapsed">

                <ImageView
                    android:id="@+id/details_recipe_image"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:contentDescription="@string/recipe_image_content_description"
                    android:fitsSystemWindows="true"
                    android:scaleType="centerCrop"
                    app:layout_collapseMode="parallax"
                    android:src="@drawable/bakeit" />

                <androidx.appcompat.widget.Toolbar
                    android:id="@+id/toolbar"
                    android:layout_width="match_parent"
                    android:layout_height="?attr/actionBarSize"
                    app:layout_collapseMode="pin"
                    app:popupTheme="@style/PopupOverlay" />

            </com.google.android.material.appbar.CollapsingToolbarLayout>
        </com.google.android.material.appbar.AppBarLayout>

        <!-- Note: we need to define an association between the AppBarLayout
        and the View that will be scrolled. Add an app:layout_behavior to a
        RecyclerView or any other View capable of nested scrolling such as
        NestedScrollView. The support library contains a special string
        resource, @string/appbar_scrolling_view_behavior, that maps to
        AppBarLayout.ScrollingViewBehavior, which is used to notify the
        AppBarLayout when scroll events occur on this particular view. The
        behavior must be established on the view that triggers the event. See:
        https://guides.codepath.com/android/Handling-Scrolls-with-CoordinatorLayout -->
        <androidx.core.widget.NestedScrollView
            android:id="@+id/nested_scroll_view"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:clipToPadding="false"
            android:paddingTop="48dp"
            android:paddingBottom="16dp"
            app:behavior_overlapTop="48dp"
            app:layout_behavior="@string/appbar_scrolling_view_behavior"
            app:toggleVisibility="@{recipeDetails.recipe != null}">

            <include
                android:id="@+id/content_partial_details"
                layout="@layout/content_details"
                app:recipeDetails="@{recipeDetails}" />
        </androidx.core.widget.NestedScrollView>

        <include
            android:id="@+id/network_state"
            layout="@layout/network_state_item"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_gravity="center"
            app:resource="@{resource}" />

    </androidx.coordinatorlayout.widget.CoordinatorLayout>
</layout>